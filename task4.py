# -*- coding: utf-8 -*-
"""Task4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QnwDa_fTk3elxhxWwHLJHI8xqIlPWy2t

import the library
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from keras.utils import to_categorical

"""Reading the data"""

df = pd.read_csv('mail_data.csv')

print(df)

"""Checking Nulldata and make it readable format"""

data = df.where(pd.notnull(df), '')

data.head()

"""Check as you want read data"""

data.head(15)

data.info()

"""Find the data shape"""

data.shape

"""Categorising the given dataset"""

data.loc[data['Category'] == 'spam', 'Category',] = 0
data.loc[data['Category'] == 'ham', 'Category',] = 1

X = data['Message']
Y = data['Category']

print(X)

print(Y)

"""Train and Testing the dataset"""

X_train,X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, random_state= 3)

print(X.shape)
print(X_train.shape)
print(X_test.shape)

print(Y.shape)
print(Y_train.shape)
print(Y_test.shape)

"""extracting the data"""

feature_extraction = TfidfVectorizer(min_df = 1, stop_words= 'english', lowercase=bool("True"))
X_train_features = feature_extraction.fit_transform(X_train)
X_test_features = feature_extraction.transform(X_test)

Y_train = Y_train.astype('int')
Y_test = Y_train.astype('int')

print(X_train)

print(X_train_features)

"""Creating Model"""

model = LogisticRegression()

model.fit(X_train_features, Y_train)

"""Here checking the training and testing % of dataset"""

prediction_on_training_data = model.predict(X_train_features)
accuracy_on_training_data = accuracy_score(Y_train, prediction_on_training_data)

print('Acc on training data : ', accuracy_on_training_data)

prediction_on_test_data = model.predict(X_test_features)

accuracy_on_test_data = accuracy_score(Y_test, prediction_on_test_data)

print('Acc on test data : ', accuracy_on_test_data)

"""Here You can verify your data or mail put in the input box"""

input_your_mail = ["FreeMsg Why haven't you replied to my text? I'm Randy, sexy, female and live local. Luv to hear from u. Netcollex Ltd 08700621170150p per msg reply Stop to end"]

input_data_features = feature_extraction.transform(input_your_mail)

prediction = model.predict(input_data_features)

print(prediction)

if(prediction[0]==1):
  print('Ham mail')

else:
  print('Spam mail')

input_your_mail = ["As per your request 'Melle Melle (Oru Minnaminunginte Nurungu Vettam)' has been set as your callertune for all Callers. Press *9 to copy your friends Callertune"]

input_data_features = feature_extraction.transform(input_your_mail)

prediction = model.predict(input_data_features)

print(prediction)

if(prediction[0]==1):
  print('Ham mail')

else:
  print('Spam mail')